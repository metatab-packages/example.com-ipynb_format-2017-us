{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": [
     "Title"
    ]
   },
   "source": [
    "# A Metatab Example Data Package"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": [
     "Description"
    ]
   },
   "source": [
    "An example data package, from the Metatab tutorial at https://github.com/CivicKnowledge/metatab-py/blob/master/README.rst"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "tags": [
     "metadata"
    ]
   },
   "source": [
    "Declare: metatab-latest\n",
    "\n",
    "Name: \n",
    "Dataset: example-data-package\n",
    "Version: 1\n",
    "Space: US\n",
    "Time: 2017\n",
    "Spatialgrain: None\n",
    "\n",
    "Section: Documentation|Title|Description\n",
    "Homepage: http://metatab.org\n",
    "    Homepage.Title: Metatab Home Page\n",
    "    Homepage.Description: Main Metatab home page\n",
    "Documentation: https://github.com/CivicKnowledge/metatab-py/blob/master/README.rst\n",
    "    Documentation.Title: Metatab Python Package README\n",
    "    Documentation.Description: The README in the Metatab Githup repo contains the tutorial for generating this package.\n",
    "\n",
    "Section: Contacts|email\n",
    "Origin: example.com\n",
    "Creator: Eric Busboom\n",
    "    Creator.Email: eric@civicknowledge. com\n",
    "Wrangler: Eric Busboom\n",
    "    Wrangler.Email: eric@civicknowledge. com\n",
    "\n",
    "Section: Notes\n",
    "Note: None"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {
    "tags": [
     "resources"
    ]
   },
   "source": [
    "Section: Resources|Name|StartLine|HeaderLines|Encoding|Description\n",
    "\n",
    "Datafile: http://public.source.civicknowledge.com/example.com/sources/test_data.zip#test_data%2Fcsv%2Fsimple-example.csv\n",
    "    Datafile.Name: simple-example\n",
    "    Datafile.Description: Random UUIDs, integers and numbers\n",
    "\n",
    "Datafile: metadata.ipynb#df\n",
    "    Datafile.Name: df\n",
    "    Datafile.Description: Random UUIDs, integers and numbers\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import metapack as mp\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from IPython.display import display \n",
    "\n",
    "%matplotlib inline\n",
    "%load_ext metapack.jupyter.magic\n",
    "sns.set_context('notebook')\n",
    "mp.jupyter.init()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Code goes after metadata, before schema\n",
    "\n",
    "df = pd.DataFrame({\n",
    "    'rand': np.random.randint(0,100,1000)\n",
    "})\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "tags": [
     "schema"
    ]
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
